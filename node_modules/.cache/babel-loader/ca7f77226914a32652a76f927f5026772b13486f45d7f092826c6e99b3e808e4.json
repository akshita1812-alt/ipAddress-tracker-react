{"ast":null,"code":"var _jsxFileName = \"/Users/Akshita/Documents/ip-address-tracker/src/App.js\";\nimport './App.css';\n// import {useState, useEffect} from 'react';\nimport Container from './components/Container';\nimport mapContainer from './components/mapContainer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  // const[ipaddress, setIpaddress] =  useState(null)\n  // const[map,setMap] = useState(\"\")\n\n  // const checkIpAddress = /^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$/gi\n  // const checkDomain = /^[a-zA-Z0-9][a-zA-Z0-9-]{1,61}[a-zA-Z0-9](?:\\.[a-zA-Z]{2,})+/\n\n  // const fetchIP = async () => {\n  //   const res = await fetch(' https://geo.ipify.org/api/v2/country?apiKey=at_85GmLmyV1D8YXWFbggczecdHtwjVw&ipAddress=8.8.8.8')\n  //   const data = await res.json()\n  //   // console.log(data)\n  //   setIpaddress(data)\n  // }\n  // useEffect(() =>{\n  //   try{\n  //     fetchIP()\n  //   }\n  //   catch(error){\n  //     console.trace(error)\n  //   }\n  // },[])\n\n  // const getIPaddress = async () =>{\n  //   const res = await fetch(`https://geo.ipify.org/api/v2/country,city?apiKey=${process.env.API_KEY }&${\n  //     checkIpAddress.test(map)\n  //       ? `ipAddress=${map}`\n  //       : checkDomain.test(map)\n  //       ? `domain=${map}`\n  //       : \"\"\n  //   }`)\n  //   const data = await res.json()\n  //   // console.log(data)\n  //   setIpaddress(data)\n  // }\n  // const handleSubmit = (e) => {\n  //   e.preventDefault()\n  //   getIPaddress()\n  //   setIpaddress(\"\")\n  // }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Container","mapContainer","jsxDEV","_jsxDEV","Fragment","_Fragment","App","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/Akshita/Documents/ip-address-tracker/src/App.js"],"sourcesContent":["import './App.css';\n// import {useState, useEffect} from 'react';\nimport Container from './components/Container';\nimport mapContainer from './components/mapContainer';\n\nfunction App() {\n  // const[ipaddress, setIpaddress] =  useState(null)\n  // const[map,setMap] = useState(\"\")\n\n  // const checkIpAddress = /^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$/gi\n  // const checkDomain = /^[a-zA-Z0-9][a-zA-Z0-9-]{1,61}[a-zA-Z0-9](?:\\.[a-zA-Z]{2,})+/\n\n  // const fetchIP = async () => {\n  //   const res = await fetch(' https://geo.ipify.org/api/v2/country?apiKey=at_85GmLmyV1D8YXWFbggczecdHtwjVw&ipAddress=8.8.8.8')\n  //   const data = await res.json()\n  //   // console.log(data)\n  //   setIpaddress(data)\n  // }\n  // useEffect(() =>{\n  //   try{\n  //     fetchIP()\n  //   }\n  //   catch(error){\n  //     console.trace(error)\n  //   }\n  // },[])\n\n  // const getIPaddress = async () =>{\n  //   const res = await fetch(`https://geo.ipify.org/api/v2/country,city?apiKey=${process.env.API_KEY }&${\n  //     checkIpAddress.test(map)\n  //       ? `ipAddress=${map}`\n  //       : checkDomain.test(map)\n  //       ? `domain=${map}`\n  //       : \"\"\n  //   }`)\n  //   const data = await res.json()\n  //   // console.log(data)\n  //   setIpaddress(data)\n  // }\n  // const handleSubmit = (e) => {\n  //   e.preventDefault()\n  //   getIPaddress()\n  //   setIpaddress(\"\")\n  // }\n\n  return (\n  <>\n    <Container>\n      \n    </Container>\n  </>  \n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAO,WAAW;AAClB;AACA,OAAOA,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,YAAY,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAErD,SAASC,GAAGA,CAAA,EAAG;EACb;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACAH,OAAA,CAAAE,SAAA;IAAAE,QAAA,eACEJ,OAAA,CAACH,SAAS;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEC;EAAC,gBACZ,CAAC;AAEL;AAACC,EAAA,GA/CQN,GAAG;AAiDZ,eAAeA,GAAG;AAAC,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}