{"ast":null,"code":"var _jsxFileName = \"/Users/Akshita/Documents/ip-address-tracker/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { useState, useEffect } from 'react';\nimport Container from './components/Container';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [ipaddress, setIpaddress] = useState(null);\n  const [map, setMap] = useState(\"\");\n\n  // const checkIpAddress = /^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$/gi\n  // const checkDomain = /^[a-zA-Z0-9][a-zA-Z0-9-]{1,61}[a-zA-Z0-9](?:\\.[a-zA-Z]{2,})+/\n\n  // const fetchIP = async () => {\n  //   const res = await fetch(' https://geo.ipify.org/api/v2/country?apiKey=at_85GmLmyV1D8YXWFbggczecdHtwjVw&ipAddress=8.8.8.8')\n  //   const data = await res.json()\n  //   // console.log(data)\n  //   setIpaddress(data)\n  // }\n  // useEffect(() =>{\n  //   try{\n  //     fetchIP()\n  //   }\n  //   catch(error){\n  //     console.trace(error)\n  //   }\n  // },[])\n\n  // const getIPaddress = async () =>{\n  //   const res = await fetch(`https://geo.ipify.org/api/v2/country,city?apiKey=${process.env.API_KEY }&${\n  //     checkIpAddress.test(map)\n  //       ? `ipAddress=${map}`\n  //       : checkDomain.test(map)\n  //       ? `domain=${map}`\n  //       : \"\"\n  //   }`)\n  //   const data = await res.json()\n  //   // console.log(data)\n  //   setIpaddress(data)\n  // }\n  // const handleSubmit = (e) => {\n  //   e.preventDefault()\n  //   getIPaddress()\n  //   setIpaddress(\"\")\n  // }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"vQpR6qQr1Eh9hOi2gvXxX0Xr/jg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Container","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","ipaddress","setIpaddress","map","setMap","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/Akshita/Documents/ip-address-tracker/src/App.js"],"sourcesContent":["import './App.css';\nimport {useState, useEffect} from 'react';\nimport Container from './components/Container';\n\nfunction App() {\n  const[ipaddress, setIpaddress] =  useState(null)\n  const[map,setMap] = useState(\"\")\n\n  // const checkIpAddress = /^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$/gi\n  // const checkDomain = /^[a-zA-Z0-9][a-zA-Z0-9-]{1,61}[a-zA-Z0-9](?:\\.[a-zA-Z]{2,})+/\n\n  // const fetchIP = async () => {\n  //   const res = await fetch(' https://geo.ipify.org/api/v2/country?apiKey=at_85GmLmyV1D8YXWFbggczecdHtwjVw&ipAddress=8.8.8.8')\n  //   const data = await res.json()\n  //   // console.log(data)\n  //   setIpaddress(data)\n  // }\n  // useEffect(() =>{\n  //   try{\n  //     fetchIP()\n  //   }\n  //   catch(error){\n  //     console.trace(error)\n  //   }\n  // },[])\n\n  // const getIPaddress = async () =>{\n  //   const res = await fetch(`https://geo.ipify.org/api/v2/country,city?apiKey=${process.env.API_KEY }&${\n  //     checkIpAddress.test(map)\n  //       ? `ipAddress=${map}`\n  //       : checkDomain.test(map)\n  //       ? `domain=${map}`\n  //       : \"\"\n  //   }`)\n  //   const data = await res.json()\n  //   // console.log(data)\n  //   setIpaddress(data)\n  // }\n  // const handleSubmit = (e) => {\n  //   e.preventDefault()\n  //   getIPaddress()\n  //   setIpaddress(\"\")\n  // }\n\n  return (\n  <>\n    <Container></Container>\n  </>  \n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,SAAQA,QAAQ,EAAEC,SAAS,QAAO,OAAO;AACzC,OAAOC,SAAS,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE/C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAK,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAIV,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAK,CAACW,GAAG,EAACC,MAAM,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;;EAEhC;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACAI,OAAA,CAAAE,SAAA;IAAAO,QAAA,eACET,OAAA,CAACF,SAAS;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY;EAAC,gBACvB,CAAC;AAEL;AAACT,EAAA,CA7CQD,GAAG;AAAAW,EAAA,GAAHX,GAAG;AA+CZ,eAAeA,GAAG;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}